services:
  # MinIO - S3 Compatible Object Storage (Storage Layer)
  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Create initial buckets in MinIO - aligned with multi-zone architecture
  mc-init:
    image: minio/mc
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      until /usr/bin/mc config host add minio http://minio:9000 minioadmin minioadmin; do
        echo 'Waiting for MinIO to be ready...'
        sleep 1
      done;
      /usr/bin/mc mb minio/raw-ingestion-zone || true;
      /usr/bin/mc mb minio/process-zone || true;
      /usr/bin/mc mb minio/access-zone || true;
      /usr/bin/mc mb minio/govern-zone-metadata || true;
      echo 'MinIO buckets created successfully'
      exit 0;
      "

  # Trino (formerly PrestoSQL) - SQL Query Engine
  trino:
    image: trinodb/trino:403
    container_name: trino
    ports:
      - "8085:8080"
    volumes:
      - ./config/trino/:/etc/trino/
    depends_on:
      - minio

  python-client:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python-client
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    depends_on:
      - trino
      - minio

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: ejemplo
      POSTGRES_USER: postgres
      POSTGRES_DB: madrid_sostenible
    volumes:
      - ./data/raw/dump-bbdd-municipal.sql:/docker-entrypoint-initdb.d/dump-bbdd-municipal.sql
    ports:
      - "5432:5432"
  superset:
    image: apache/superset:latest
    container_name: superset
    ports:
      - "8088:8088"
    environment:
      SUPERSET_WEBSERVER_PORT: 8088
      SUPERSET_DB__HOST: postgres
      SUPERSET_DB__PORT: 5432
      SUPERSET_DB__NAME: madrid_sostenible
      SUPERSET_DB__USER: postgres
      SUPERSET_DB__PASSWORD: ejemplo
      SUPERSET_SECRET_KEY : 'cfl9+Hr44VnRzBBfT8TPSOPAx1EupHIs9uMI1pFOnus='
      SUPERSET_ADMIN_USER: admin
      SUPERSET_ADMIN_PASSWORD: adminpassword
    command: >
          /bin/bash -c "
          superset db upgrade &&
          superset fab create-admin --username admin --firstname Admin --lastname User --email admin@superset.com --password admin123 &&
          superset init &&
          superset run -h 0.0.0.0 -p 8088
          "

    depends_on:
        - postgres
    volumes:
        - superset_home:/app/superset_home

volumes:
  minio_data:
  pg_data:
  superset_home:


